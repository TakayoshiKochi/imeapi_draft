Changes since 20130815 Working Draft

* Split the draft into main and annex
  To get the standardization process smoother, only core APIs are left in
  the main draft and the following parts are pushed to an annex for further
  discussions or refinements:
  - Drawing IME candidates in Javascript
    * CompositionEvent interface extension (segment information etc.)
    * setCaretRectangle() API
  - Delivering IME related events to non-editable elements
  - confirmComposition() (not used for overlapping UI usecase)
  - locale (further refinement required)

* Example/use cases/best practices
- Modified example1 code (suggest UI) to use the new candidatewindow events.
- Fixed some ReSpec warnings (no visible change).

* API
[CORE]
- Added oncandidatewindow{show,update,hide} events and
  getCandidateWindowClientRect(), as proposed by Microsoft [1],
  except
  * isCandidateWindowVisible() is omitted due to redundancy.
  * mentions about synchronousness are dropped due to consideration for
    implementability on non-Windows platform.
    (although this does not mean discouraging synchronous implementation.)
- Added compositionStartOffset/compositionEndOffset to InputMethodContext,
  as proposed by Microsoft [1] [4].

[ANNEX]
- Removed setExclusionRectangle in favor of using
  candidatewindow{show,update,hide} events.
- Added enableEditingEvents()/disableEditingEvents(), for getting events
  delivered to non-editable elements.  Removed a sentence about HTML5 inputmode
  attribute for getting events.[3]
- Renamed selection{Start,end} to activeSegment{Start,End} as a result of the
  discussion at [4].
- Merge Composition interface into D3E CompositionEvent.
  This makes sense as whenever any content or state of composition changes,
  a CompositionEvent is fired, and it avoids any consistency issue between
  composition events and the content of Composition.

[3] Adding a method to deliver editing-related events to a DOM element
  https://www.w3.org/Bugs/Public/show_bug.cgi?id=23422
[4] Composition dictionary should be changed
  https://www.w3.org/Bugs/Public/show_bug.cgi?id=22059

Changes since 20130404 Working Draft

* Example/use cases/best practices
- Removed Javascript IME use-case
- Removed example1 (drawing composition text in <canvas>)
- Added example code for drawing composition text.
- Added an explanation of InputMethodContext's scope in best practices section.

* API
- Added target attribute proposed by Microsoft [1]
- Renamed getInputContext() to .inputMethodContext per comment from James Su
  [2]
- Marked composition and target attributes as nullable.
- Clarified that context is associated with one editable or focusable element.
- Clarified the scope of setCaretRectangle()'s coordinates.
- Removed confusing 'enabled' property and open() method in favor of
  usual focus control and inputmode attribute.
- Changed composition interface. the 'text' property was changed to plain
  DOMString from Node, the 'caret' property was divided into the
  'selectionStart' and the 'selectionEnd' properties.  Added the 'segments'
  property to represent the position of segmentation of composition text.

[1] Microsoft proposal:
  https://dvcs.w3.org/hg/ime-api/raw-file/tip/proposals/IMEProposal.html
[2] Comment from James Su
  http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0361.html
